<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="stcs.mapper.SentenceMapper">
  <resultMap id="BaseResultMap" type="stcs.model.Sentence">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="text" jdbcType="VARCHAR" property="text" />
    <result column="reflection" jdbcType="VARCHAR" property="reflection" />
    <result column="works" jdbcType="VARCHAR" property="works" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="speaker" jdbcType="VARCHAR" property="speaker" />
    <result column="labels" jdbcType="VARCHAR" property="labels" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="language_id" jdbcType="INTEGER" property="languageId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_edit_time" jdbcType="TIMESTAMP" property="lastEditTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, text, reflection, works, author, speaker, labels, location, type_id, language_id, 
    create_time, last_edit_time
  </sql>
  <select id="selectAllPrimaryKeys" resultType="java.lang.Integer">
  	select id from sentence 
  </select>
  <select id="selectByExample" parameterType="stcs.model.SentenceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sentence
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <!-- 自改，在Example类中添加对应变量实现分页 -->
    <if test="startRow != null and pageSize != null and pageSize != 0">
    	limit #{startRow},#{pageSize}
	</if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sentence
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sentence
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="stcs.model.SentenceExample">
    delete from sentence
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="stcs.model.Sentence">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID() 
    </selectKey>
    insert into sentence (text, reflection, works, 
      author, speaker, labels, 
      location, type_id, language_id, 
      create_time, last_edit_time)
    values (#{text,jdbcType=VARCHAR}, #{reflection,jdbcType=VARCHAR}, #{works,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{speaker,jdbcType=VARCHAR}, #{labels,jdbcType=VARCHAR}, 
      #{location,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER}, #{languageId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastEditTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="stcs.model.Sentence">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sentence
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="text != null">
        text,
      </if>
      <if test="reflection != null">
        reflection,
      </if>
      <if test="works != null">
        works,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="speaker != null">
        speaker,
      </if>
      <if test="labels != null">
        labels,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="languageId != null">
        language_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastEditTime != null">
        last_edit_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="text != null">
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="reflection != null">
        #{reflection,jdbcType=VARCHAR},
      </if>
      <if test="works != null">
        #{works,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="speaker != null">
        #{speaker,jdbcType=VARCHAR},
      </if>
      <if test="labels != null">
        #{labels,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="languageId != null">
        #{languageId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastEditTime != null">
        #{lastEditTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="stcs.model.SentenceExample" resultType="java.lang.Long">
    select count(*) from sentence
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sentence
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.text != null">
        text = #{record.text,jdbcType=VARCHAR},
      </if>
      <if test="record.reflection != null">
        reflection = #{record.reflection,jdbcType=VARCHAR},
      </if>
      <if test="record.works != null">
        works = #{record.works,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.speaker != null">
        speaker = #{record.speaker,jdbcType=VARCHAR},
      </if>
      <if test="record.labels != null">
        labels = #{record.labels,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.languageId != null">
        language_id = #{record.languageId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastEditTime != null">
        last_edit_time = #{record.lastEditTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sentence
    set id = #{record.id,jdbcType=INTEGER},
      text = #{record.text,jdbcType=VARCHAR},
      reflection = #{record.reflection,jdbcType=VARCHAR},
      works = #{record.works,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      speaker = #{record.speaker,jdbcType=VARCHAR},
      labels = #{record.labels,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=INTEGER},
      language_id = #{record.languageId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      last_edit_time = #{record.lastEditTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="stcs.model.Sentence">
    update sentence
    <set>
      <if test="text != null">
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="reflection != null">
        reflection = #{reflection,jdbcType=VARCHAR},
      </if>
      <if test="works != null">
        works = #{works,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="speaker != null">
        speaker = #{speaker,jdbcType=VARCHAR},
      </if>
      <if test="labels != null">
        labels = #{labels,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="languageId != null">
        language_id = #{languageId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastEditTime != null">
        last_edit_time = #{lastEditTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="stcs.model.Sentence">
    update sentence
    set text = #{text,jdbcType=VARCHAR},
      reflection = #{reflection,jdbcType=VARCHAR},
      works = #{works,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      speaker = #{speaker,jdbcType=VARCHAR},
      labels = #{labels,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      language_id = #{languageId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_edit_time = #{lastEditTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>